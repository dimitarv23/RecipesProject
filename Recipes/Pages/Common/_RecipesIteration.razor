@inject IRecipeRepository _recipeRepository

<div class="container">
    <div class="row">
        <div class="col-12 mb-5 mt-5">
            <_CreateRecipe ImageSource="/images/chicken-dishes-images/create-recipe.jpg" />

            <div class="col-12" style="margin-top: 40px; display: flex;">
                @foreach (var obj in Recipes.Where(x => x.Type.ToLower() == PageType))
                {
                    <div class="mb-5 col-sm" style="margin-left: 5px; margin-right: 5px; border: 5px inset lightblue;">
                        <a href="/dishes/@obj.Type/@obj.ID" style="width: 150px;">
                            <div class="item"
                             style="display: flex; background: rgb(136, 174, 203); align-items: center;">
                                <img src="/images/@obj.Type.ToLower()-dishes-images/@obj.ImageSource"
                                 style="object-fit: fill; width: 230px; margin: 5px; border: 3px inset white;" />
                                <h3 class="text-center" style="font-size: 22px;">@obj.Name</h3>
                            </div>
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string PageType { get; set; }

    private IEnumerable<RecipeDTO> Recipes { get; set; } = new List<RecipeDTO>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            StateHasChanged();
            await LoadCategories();
            StateHasChanged();
        }
    }

    private async Task LoadCategories()
    {
        Recipes = await _recipeRepository.GetAll();
    }
}
